apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app2-api.fullname" . }}
  labels:
    {{- include "app2-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app2-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        date: "{{ now | unixEpoch }}"
        {{- include "app2-api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app2-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /api/status
              port: http
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: "PORT"
            value: "3000"
          - name: "DB"
            value: "postgres"
          - name: "DBUSER"
            value: "postgres"
          - name: "DBPASS"
            valueFrom:
              secretKeyRef:
                name: db-secret
                key: password
          - name: "DBHOST"
            value: "127.0.0.1"
          - name: "DBPORT"
            value: "5432"
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:latest
          command:
            - "/cloud_sql_proxy"
            - "-instances=silicon-pointer-146802:northamerica-northeast2:app2-instance=tcp:0.0.0.0:5432"
            - "-credential_file=/secrets/service_account.json"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
          - name: sa-secret-volume
            mountPath: /secrets/
            readOnly: true
      volumes:
      - name: sa-secret-volume
        secret:
          secretName: sa-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
