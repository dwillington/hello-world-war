apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-api
spec:
  selector:
    matchLabels:
      app: app2-api
  replicas: 1
  template:
    metadata:
      labels:
        app: app2-api
    spec:
      imagePullSecrets:
        - name: artifact-registry
      containers:
      - name: app2-api
        image: "northamerica-northeast2-docker.pkg.dev/silicon-pointer-146802/poptal-docker/app2-api"
        env:
        - name: "PORT"
          value: "3000"
        - name: "DB"
          value: "postgres"
        - name: "DBUSER"
          value: "postgres"
        - name: "DBPASS"
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: "DBHOST"
          value: "127.0.0.1"
        - name: "DBPORT"
          value: "5432"
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command:
          - "/cloud_sql_proxy"
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"
          # tcp should be set to the port the proxy should listen on
          # and should match the DB_PORT value set above.
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=silicon-pointer-146802:northamerica-northeast2:app2-instance=tcp:0.0.0.0:5432"
          - "-credential_file=/secrets/service_account.json"
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - name: sa-secret-volume
          mountPath: /secrets/
          readOnly: true
      # https://www.digitalocean.com/community/tutorials/cloud-sql-proxy-in-gke
      volumes:
      - name: sa-secret-volume
        secret:
          secretName: sa-secret
